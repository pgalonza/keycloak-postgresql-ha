x-logging-loki: &x-logging-loki
  logging:
    driver: loki
    options:
      loki-url: "http://localhost:3100/loki/api/v1/push"
services:
  consul-server1:
    image: hashicorp/consul:1.21
    restart: always
    command: "agent -server -retry-join=consul-server2 -node=consul-server1 -data-dir='/consul/data' -bootstrap-expect=3 -client=0.0.0.0 -ui"
    <<: *x-logging-loki
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    networks:
      - study-network
  consul-server2:
    image: hashicorp/consul:1.21
    restart: always
    command: "agent -server -retry-join=consul-server1 -node=consul-server2 -data-dir='/consul/data' -bootstrap-expect=3 -client=0.0.0.0 -ui"
    <<: *x-logging-loki
    networks:
      - study-network
  consul-server3:
    image: hashicorp/consul:1.21
    restart: always
    command: "agent -server -retry-join=consul-server1 -node=consul-server3 -data-dir='/consul/data' -bootstrap-expect=3 -client=0.0.0.0 -ui"
    <<: *x-logging-loki
    networks:
      - study-network
  consul-client1:
    image: hashicorp/consul:1.21
    restart: always
    command: "agent -node=consul-client1 -client=0.0.0.0 -data-dir='/consul/data' -retry-join=consul-server1 -retry-join=consul-server2"
    <<: *x-logging-loki
    networks:
      - study-network
    depends_on:
      - consul-server1
      - consul-server2
      - consul-server3
      - loki

  postgresql-patroni1:
    build: ./pgsql-patroni
    environment:
      PATRONI_NAME: postgresql1
      PATRONI_RESTAPI_LISTEN: 0.0.0.0:8008
      PATRONI_POSTGRESQL_LISTEN: 0.0.0.0:5432
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: supersecret
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: repsecret
      PATRONI_CONSUL_HOST: consul-client1:8500
      PATRONI_CONSUL_URL: http://consul-client1:8500
      PATRONI_CONSUL_REGISTER_SERVICE: false
    <<: *x-logging-loki
    networks:
      - study-network
    depends_on:
      - consul-client1
      - loki

  postgresql-patroni2:
    build: ./pgsql-patroni
    environment:
      PATRONI_NAME: postgresql2
      PATRONI_RESTAPI_LISTEN: 0.0.0.0:8008
      PATRONI_POSTGRESQL_LISTEN: 0.0.0.0:5432
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: supersecret
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: repsecret
      PATRONI_CONSUL_HOST: consul-client1:8500
      PATRONI_CONSUL_URL: http://consul-client1:8500
      PATRONI_CONSUL_REGISTER_SERVICE: false
    <<: *x-logging-loki
    networks:
      - study-network
    depends_on:
      - consul-client1
      - loki

  postgresql-patroni3:
    build: ./pgsql-patroni
    environment:
      PATRONI_NAME: postgresql3
      PATRONI_RESTAPI_LISTEN: 0.0.0.0:8008
      PATRONI_POSTGRESQL_LISTEN: 0.0.0.0:5432
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: supersecret
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: repsecret
      PATRONI_CONSUL_HOST: consul-client1:8500
      PATRONI_CONSUL_URL: http://consul-client1:8500
      PATRONI_CONSUL_REGISTER_SERVICE: false
    <<: *x-logging-loki
    networks:
      - study-network
    depends_on:
      - consul-client1
      - loki

  pgbouncer1:
    image: bitnami/pgbouncer:1.24.1
    environment:
      - PGBOUNCER_AUTH_TYPE=md5
      - PGBOUNCER_AUTH_USER=postgres
      - POSTGRESQL_HOST=postgresql-patroni1
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=supersecret
      - PGBOUNCER_DATABASE=*
      - GBOUNCER_USERLIST_FILE=/bitnami/userlists.txt
      - PGBOUNCER_PORT=6432
    <<: *x-logging-loki
    volumes:
      - ./pgbouncer/userlists.txt:/bitnami/userlists.txt
      - ./keycloak/init-postgresql:/docker-entrypoint-initdb.d
    ports:
      - 6432:6432
    networks:
      - study-network
    depends_on:
      - postgresql-patroni1
      - loki

  pgbouncer2:
    image: bitnami/pgbouncer:1.24.1
    environment:
      - PGBOUNCER_AUTH_TYPE=md5
      - PGBOUNCER_AUTH_USER=postgres
      - POSTGRESQL_HOST=postgresql-patroni2
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=supersecret
      - PGBOUNCER_DATABASE=*
      - GBOUNCER_USERLIST_FILE=/bitnami/userlists.txt
      - PGBOUNCER_PORT=6432
    <<: *x-logging-loki
    volumes:
      - ./pgbouncer/userlists.txt:/bitnami/userlists.txt
      - ./keycloak/init-postgresql:/docker-entrypoint-initdb.d
    networks:
      - study-network
    depends_on:
      - postgresql-patroni2
      - loki

  pgbouncer3:
    image: bitnami/pgbouncer:1.24.1
    environment:
      - PGBOUNCER_AUTH_TYPE=md5
      - PGBOUNCER_AUTH_USER=postgres
      - POSTGRESQL_HOST=postgresql-patroni3
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=supersecret
      - PGBOUNCER_DATABASE=*
      - GBOUNCER_USERLIST_FILE=/bitnami/userlists.txt
      - PGBOUNCER_PORT=6432
    <<: *x-logging-loki
    volumes:
      - ./pgbouncer/userlists.txt:/bitnami/userlists.txt
      - ./keycloak/init-postgresql:/docker-entrypoint-initdb.d
    networks:
      - study-network
    depends_on:
      - postgresql-patroni3
      - loki

  haproxy-db:
    image: haproxy:3.2
    ports:
      - "5000:5000"
      - "5001:5001"
    <<: *x-logging-loki
    volumes:
      - ./haproxy/haproxy-db.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      - study-network
    depends_on:
      - pgbouncer1
      - pgbouncer2
      - pgbouncer3
      - loki

  keycloak1:
    image: quay.io/keycloak/keycloak:25.0
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://haproxy-db:5000/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB_SCHEMA: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_CACHE: ispn
      KC_HOSTNAME_STRICT: false
      KC_PROXY_HEADERS: forwarded
      KC_HEALTH_ENABLED: true
    command: [ "start-dev", "--http-port=8081" ]
    <<: *x-logging-loki
    networks:
      - study-network
    depends_on:
      - haproxy-db
      - loki

  keycloak2:
    image: quay.io/keycloak/keycloak:25.0
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://haproxy-db:5000/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB_SCHEMA: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_CACHE: ispn
      KC_HOSTNAME_STRICT: false
      KC_PROXY_HEADERS: forwarded
      KC_HEALTH_ENABLED: true
    command: [ "start-dev", "--http-port=8081" ]
    <<: *x-logging-loki
    networks:
      - study-network
    depends_on:
      - haproxy-db
      - loki

  haproxy-kc:
    image: haproxy:3.2
    ports:
      - "80:80"
    <<: *x-logging-loki
    volumes:
      - ./haproxy/haproxy-kc.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      - study-network
    depends_on:
      - keycloak1
      - keycloak2
      - loki

  prometheus:
    image: prom/prometheus:v3.6.0
    ports:
      - "9090:9090"
    <<: *x-logging-loki
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - study-network

  loki:
    image: grafana/loki:3.5
    ports:
      - "3100:3100"
    networks:
      - study-network

  grafana:
    image: grafana/grafana-enterprise:12.1.0
    ports:
      - '3000:3000'
    <<: *x-logging-loki
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/example-dashboard.json:/etc/dashboards/example-dashboard.json
    networks:
      - study-network


networks:
  study-network:
    driver: bridge
